# -*- coding: utf-8 -*-
"""svmfile.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tl6typkK7Mgk8VF2p6qVxaWjrEQ394wm
"""

import os
from google.colab import drive
drive.mount('/content/drive/')

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import math
# %matplotlib inline

mydata=pd.read_csv('/content/drive/My Drive/csv/suv_data.csv')
print(mydata.shape)
mydata.head()

sns.countplot(x='Purchased',data=mydata)

sns.countplot(data=mydata)

sns.countplot(x='Purchased', hue='Gender', data=mydata)
plt.rcParams['figure.figsize']=(20.0,10.0)

mydata['Age'].plot.hist()

mydata['EstimatedSalary'].plot.hist()

mydata.info()

mydata.isnull().sum()

sns.heatmap(mydata.isnull(),yticklabels=False)

pd.get_dummies(mydata['Gender'])

gender = pd.get_dummies(mydata['Gender'])
gender.head()

gender = pd.get_dummies(mydata['Gender'],drop_first=True)
gender

mydata=pd.concat([mydata,gender],axis=1)
mydata

mydata.drop(['User ID','Gender'],axis=1,inplace=True)
mydata

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report
from sklearn.metrics import confusion_matrix,accuracy_score
from sklearn.preprocessing import StandardScaler

x = mydata.drop('Purchased',axis=1)
y = mydata['Purchased']
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=47)
sc = StandardScaler()
x_train = sc.fit_transform(x_train)
x_test = sc.transform(x_test)
logmodel = LogisticRegression()
logmodel.fit(x_train,y_train)

predictions = logmodel.predict(x_test)
print('Classification Report')
print(classification_report(y_test,predictions))
print('Confusion Matrix')
print(confusion_matrix(y_test,predictions))
print('\n Accuracy Report')
print(accuracy_score(y_test,predictions))